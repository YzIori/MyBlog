{"pageProps":{"post":{"title":"【要約】良いコード/悪いコードで学ぶ設計入門 【12章 2】","date":"2022-1-20","slug":"good_bad_code12_2","content":"<h1 id=\"良いコード悪いコードで学ぶ設計入門-12-章まとめ-2\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#良いコード悪いコードで学ぶ設計入門-12-章まとめ-2\"><span class=\"icon icon-link\"></span></a>良いコード/悪いコードで学ぶ設計入門　 12 章まとめ 2</h1>\n<h2 id=\"124-コマンドクエリ分離\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#124-コマンドクエリ分離\"><span class=\"icon icon-link\"></span></a>12.4 コマンド・クエリ分離</h2>\n<p>bad code</p>\n<pre class=\"language-java\"><code class=\"language-Java\"><span class=\"token keyword\">int</span> <span class=\"token function\">gainAndGetPoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  point <span class=\"token operator\">+=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> point<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>good code</p>\n<pre class=\"language-java\"><code class=\"language-Java\"><span class=\"token doc-comment comment\">/**\n* ポイントを増やす(コマンド)\n*/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">gainPoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  point <span class=\"token operator\">+=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token doc-comment comment\">/**\n* ポイントを返す(コマンド)\n* <span class=\"token keyword\">@return</span> ポイント\n*/</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">getPoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> point<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"126-戻り値\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#126-戻り値\"><span class=\"icon icon-link\"></span></a>12.6 戻り値</h2>\n<h3 id=\"1261-型を使って戻り値の意図を表明すること\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#1261-型を使って戻り値の意図を表明すること\"><span class=\"icon icon-link\"></span></a>12.6.1 「型」を使って戻り値の意図を表明すること。</h3>\n<p>bad code</p>\n<p>プリミティブ型では意味が不明瞭</p>\n<pre class=\"language-java\"><code class=\"language-Java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Price</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 省略</span>\n  <span class=\"token keyword\">int</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">Price</span> other<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> amount <span class=\"token operator\">+</span> other<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>どれが金額か分かりにくい。</p>\n<pre class=\"language-java\"><code class=\"language-Java\"><span class=\"token keyword\">int</span> price <span class=\"token operator\">=</span> productPrice<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>otherPrice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">// 商品価格の総額</span>\n<span class=\"token keyword\">int</span> discountedPrice <span class=\"token operator\">=</span> <span class=\"token function\">calcDisCountedPrice</span><span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 割引金額</span>\n<span class=\"token keyword\">int</span> deliveryPrice <span class=\"token operator\">=</span> <span class=\"token function\">calcDeliveryPrice</span><span class=\"token punctuation\">(</span>discountedPrice<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 配送料</span>\n\n</code></pre>\n<p>挙句の果、値の渡し間違え</p>\n<pre class=\"language-java\"><code class=\"language-Java\"><span class=\"token comment\">// 配送手数料DeliveryChangeには配送料が渡されるべき</span>\n<span class=\"token comment\">// しかし、商品価格の総額が渡されてしまっている。</span>\n\n<span class=\"token class-name\">DeliveryCharge</span> deliveryCharge <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DeliveryCharge</span><span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>good code</p>\n<p>価格を返すことが明瞭</p>\n<pre class=\"language-java\"><code class=\"language-Java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Price</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 省略</span>\n  <span class=\"token class-name\">Price</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">Price</span> other<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> added <span class=\"token operator\">=</span> amount <span class=\"token operator\">+</span> other<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Price</span><span class=\"token punctuation\">(</span>added<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>値を間違えた際でもコンパイラで弾ける。</p>\n<pre class=\"language-java\"><code class=\"language-Java\"><span class=\"token class-name\">Price</span> price <span class=\"token operator\">=</span> productPrice<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>otherPrice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">DiscountedPrice</span> discountedPrice <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DiscountedPrice</span><span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">DeliveryPrice</span> deliveryPrice <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DeliveryPrice</span><span class=\"token punctuation\">(</span>discountedPrice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<h3 id=\"1263-エラーは戻り値で返さない例外をスローすること\"><a aria-hidden=\"true\" tabindex=\"-1\" href=\"#1263-エラーは戻り値で返さない例外をスローすること\"><span class=\"icon icon-link\"></span></a>12.6.3 エラーは戻り値で返さない、例外をスローすること。</h3>\n<p>bad code</p>\n<p>エラーを Location 型の特定の状態で表現している。ダブルミーニングはよくない。</p>\n<pre class=\"language-java\"><code class=\"language-Java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Location</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 省略</span>\n\n  <span class=\"token comment\">// 位置を移動する。</span>\n  <span class=\"token class-name\">Location</span> <span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> shiftX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> shiftY<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> nextX <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> shiftX<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> nextY <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> shiftY<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">valid</span><span class=\"token punctuation\">(</span>nextX<span class=\"token punctuation\">,</span> nextY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Location</span><span class=\"token punctuation\">(</span>nextX<span class=\"token punctuation\">,</span> nextY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// (-1, -1)はエラー値</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Location</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>good code</p>\n<p>エラーは例外をスローする形にする。</p>\n<pre class=\"language-java\"><code class=\"language-Java\"><span class=\"token comment\">// 位置を表現するクラス</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Location</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 省略</span>\n\n  <span class=\"token class-name\">Location</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">valid</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"不正な位置です。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 位置を移動する</span>\n  <span class=\"token class-name\">Location</span> <span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> shiftX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> shiftY<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> nextX <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> shiftX<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> nextY <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> shiftY<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Location</span><span class=\"token punctuation\">(</span>nextX<span class=\"token punctuation\">,</span> nextY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>","ogImage":{"url":"/assets/blog/dynamic-routing/good_bad_code.png"},"coverImage":"/assets/blog/dynamic-routing/good_bad_code.png","tags":["設計","初心者","Java"]}},"__N_SSG":true}